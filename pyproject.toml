[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "bornhack-website"
description = "Django project to power Bornhack."
version = "1.0"
readme = "README.md"
requires-python = "==3.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "Operating System :: OS Independent",
]

[project.urls]
homepage = "https://github.com/bornhack/bornhack-website"

[tool.ruff]
target-version = "py39"
extend-exclude = [
    ".git",
    "__pycache__",
]
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "G004", # Logging statement uses f-string
    "ANN101", # Missing type annotation for `self` in method
    "ANN102", # Missing type annotation for `cls` in classmethod
    "EM101", # Exception must not use a string literal, assign to variable first
    "EM102", # Exception must not use a f-string literal, assign to variable first
    "COM812", # missing-trailing-comma (https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules)
    "ISC001", # single-line-implicit-string-concatenation (https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules)
    "D", #  Docstrings
    "PT", # We use django tests, not pytest
]

[tool.ruff.lint.per-file-ignores]
"**/test*.py" = [
    "ARG", # Unused function args -> fixtures nevertheless are functionally relevant...
    "FBT", # Don't care about booleans as positional arguments in tests, e.g. via @pytest.mark.parametrize()
    "PLR2004", # Magic value used in comparison, ...
    "ANN001", # Missing type annotation for function argument ...
    "ANN201", # Missing return type annotation for public function ...
    "S113", # Probable use of requests call without timeout
    "E501", # Line too long
    "D104", # Missing docstring in public package
    "D415", # First line should end with a period
    "SLF001", # Private member accessed
    "PLR", # Magic value used in comparison
    "N", # PEP naming conventions
]
"src/vendor/*" = [
    "ALL" # Ignore all linting for vendor code
]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pydocstyle]
convention = "google"
